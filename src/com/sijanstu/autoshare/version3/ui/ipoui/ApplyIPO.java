package com.sijanstu.autoshare.version3.ui.ipoui;

import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatLaf;
import com.sijanstu.autoshare.version3.dto.ipo.Scrip;
import com.sijanstu.autoshare.version3.dto.ipo.ScripList;
import com.sijanstu.autoshare.version3.httprequests.Request;
import com.sijanstu.autoshare.version3.ui.Main;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author Sijan Bhandari
 */
public final class ApplyIPO extends javax.swing.JFrame {

    /**
     * Creates new form ApplyIPO
     */
    public ApplyIPO() {
        initComponents();
        setThemes();
        new FetchApplicabbleScripts().start();
    }

    void setThemes(){
        try {
            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(ApplyIPO.class.getName()).log(Level.SEVERE, null, ex);
        }
        FlatLaf.updateUI();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        roundPanel1 = new com.sijanstu.autoshare.version3.ui.RoundPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        issuesPanel = new javax.swing.JPanel();
        name2 = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        name3 = new javax.swing.JLabel();
        name1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Available IPO List");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        roundPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Currently Available Issues");

        jScrollPane1.setBorder(null);

        issuesPanel.setBackground(new java.awt.Color(0, 0, 0));
        issuesPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jScrollPane1.setViewportView(issuesPanel);

        name2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        name2.setForeground(new java.awt.Color(255, 255, 255));
        name2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name2.setText("Issue Type ");

        name.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        name.setForeground(new java.awt.Color(255, 255, 255));
        name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name.setText("Close Date");

        name3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        name3.setForeground(new java.awt.Color(255, 255, 255));
        name3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name3.setText("Issue Description ");

        name1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        name1.setForeground(new java.awt.Color(255, 255, 255));
        name1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        name1.setText("Company Name ");

        javax.swing.GroupLayout roundPanel1Layout = new javax.swing.GroupLayout(roundPanel1);
        roundPanel1.setLayout(roundPanel1Layout);
        roundPanel1Layout.setHorizontalGroup(
            roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel1Layout.createSequentialGroup()
                .addGroup(roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(roundPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(roundPanel1Layout.createSequentialGroup()
                        .addGroup(roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(roundPanel1Layout.createSequentialGroup()
                                .addGap(230, 230, 230)
                                .addComponent(name2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(name1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(roundPanel1Layout.createSequentialGroup()
                        .addGap(390, 390, 390)
                        .addComponent(name3, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(100, 160, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        roundPanel1Layout.setVerticalGroup(
            roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(roundPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(roundPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(name2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 417, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(roundPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | UnsupportedLookAndFeelException | IllegalAccessException |
                 InstantiationException ex) {
            java.util.logging.Logger.getLogger(ApplyIPO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ApplyIPO().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel issuesPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel name;
    private javax.swing.JLabel name1;
    private javax.swing.JLabel name2;
    private javax.swing.JLabel name3;
    private com.sijanstu.autoshare.version3.ui.RoundPanel roundPanel1;
    // End of variables declaration//GEN-END:variables
    class FetchApplicabbleScripts extends Thread{
        @Override
        public void run(){
            try {
                ScripList scripList = new Request(Main.currentUser).getApplicableIssue();
                if(scripList != null){
                    Scrip[] scrips = scripList.getObject();
                    int location=60;
                    for(Scrip scrip : scrips){
                        IpoApply ipoApply = new IpoApply(scrip);
                        issuesPanel.add(ipoApply, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, location, -1, -1));
                        location+=90;
                    }
                    issuesPanel.revalidate();
                    issuesPanel.repaint();
                    new FetchHistoryScripts(location).start();
                }
            } catch (IOException e) {
               // JOptionPane.showMessageDialog(null, "Error in fetching data");
            }

        }
    }
    class FetchHistoryScripts extends Thread{
        int location;
        public FetchHistoryScripts(int location) {
            this.location = location;
        }
        @Override
        public void run(){
            try {
                ScripList scripList = new Request(Main.currentUser).getHistory();
                if(scripList != null){
                    Scrip[] scrips = scripList.getObject();
                    for(Scrip scrip : scrips){
                        IpoApply ipoApply = new IpoApply(scrip);
                        issuesPanel.add(ipoApply, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, location, -1, -1));
                        location+=90;
                    }
                    issuesPanel.revalidate();
                    issuesPanel.repaint();
                }
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Error in fetching data");
            }

        }
    }
}
